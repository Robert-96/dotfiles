{
  // Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "main": {
    "prefix": "ifmain",
    "body": "if __name__ == \"__main__\":\n\t${1:main()}$0",
    "description" : "Run code only when the file is executed directly."
  },
  "print": {
    "prefix": "print",
    "body": "print(${1})$0",
    "description": "Basic print statement for output."
  },
  "printf": {
    "prefix": "printf",
    "body": "print(f\"${1}\")$0",
    "description": "Formatted print statement for interpolated output."
  },
  "open": {
    "prefix": "open",
    "body": "with open(\"$1\") as ${2:fp}:\n\t${3:data = ${2}.read()}$0",
    "description" : "Open a file with auto-close after reading."
  },
  "jsonfp": {
    "prefix": "jsonfp",
    "body": "with open(\"$1\") as ${2:fp}:\n\t${3:data} = json.load(${2})$0",
    "description" : "Load JSON data from a file."
  },
  "if": {
    "prefix": "if",
    "body": "if ${1:condition}:\n\t${2:pass}$0",
    "description" : "Basic conditional statement."
  },
  "for": {
    "prefix": "for",
    "body": "for ${1:value} in ${2:iterable}:\n\t${3:pass}$0",
    "description" : "For loop to iterate over a sequence."
  },
  "while": {
    "prefix": "while",
    "body": "while ${1:condition}:\n\t${2:pass}$0",
    "description" : "While loop for repeated checks."
  },
  "dowhile": {
    "prefix": "dowhile",
    "body": "do = True\nwhile do or ${2:condition}:\n\tdo = False\n\t${1:body}$0",
    "description" : "Simulate a do-while loop."
  },
  "try-except": {
    "prefix": "try",
    "body": "try:\n\t${1:pass}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}$0",
    "description" : "Basic error handling."
  },
  "try-except-else-finally": {
    "prefix": "tryef",
    "body": "try:\n\t${1:pass}\nexcept${2: ${3:Exception} as ${4:e}}:\n\t${5:raise}\nelse:\n\t${6:pass}\nfinally:\n\t${7:pass}$0",
    "description" : "Full try-except with else and finally."
  },
  "try-except-else": {
    "prefix": "trye",
    "body": "try:\n\t${1:pass}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nelse:\n\t${5:pass}$0",
    "description" : "Try-except with else clause."
  },
  "try-except-finally": {
    "prefix": "tryf",
    "body": "try:\n\t${1:pass}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nfinally:\n\t${5:pass}$0",
    "description" : "Try-except with finally block."
  }
}
